name: Build and Test
on: [push, pull_request]
env:
 PROJECT_CODE: AgentTest
 API_URL: http://localhost/api.php
jobs:
 run_script:
  runs-on: ubuntu-latest
  steps:
    - name: Checkout code
      uses: actions/checkout@v3
#   - name: Save commit as patch file
#     run: git show ${{ github.sha }} > commit.patch
    - name: Login to Docker Registry
      uses: docker/login-action@v2
      with:
        registry: quay.io/fossid
        username: fossid+fst_790
        password: 0NGYIA3EVBJMO45OAE50THJI1NUZEK6B83HR8XQ9OU60FNGHJIOY5425C720L5QT
    - name: Pull Docker Image
      run: docker pull quay.io/fossid/workbench-agent:0.1.0
    - name: List files
      run: cd ${{ github.workspace }} && ls -la
    - name: Run Docker Container
      run: |
        EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64) &&
        MY_RESULTS_FILE="${{ github.workspace }}/results/wb_result.json" &&
        docker run -v "${{ github.workspace }}/analyzed_code":"/tmp/analyzed_code" \
                   -v "${{ github.workspace }}/results":"/tmp/results" \
                  quay.io/fossid/workbench-agent:0.1.0 \
          --api_url http://localhost/api.php \
          --api_user fossid \
          --api_token IJKf1aZXqfFqKEckX6Rxwp9YK0uer2ds37gd24vzmp \
          --project_code $PROJECT_CODE \
          --scan_code $PROJECT_CODE \
          --path "/tmp/analyzed_code" \
          --limit 1 \
          --auto_identification_detect_declaration \
          --auto_identification_detect_copyright \
          --auto_identification_resolve_pending_ids \
          --delta_only \
          --path-result '/tmp/results/wb_result.json' &&
        echo "GITHUB_FOSSID_RESULTS<<$EOF" >> "$GITHUB_ENV" &&
        cat "$MY_RESULTS_FILE" >> "$GITHUB_ENV" &&
        echo $'\n' >> "$GITHUB_ENV" &&
        echo "$EOF" >> "$GITHUB_ENV"
 
    - name: Display results from env variable
      run: echo "${{ env.GITHUB_FOSSID_RESULTS }}"
